
April 11th
1. Support for records to show some data when isAClass.
 a) ~DONE!~ Add is A list && is a class to NameValueType**
 b) ~DONE!~ ** update NameValueType in dataClassGenerator to include isAClass and isAList
 c) ~DONE!~ Build widgets for each scenario
2. On the input forms:
 a) ~DONE!~ a label for the class search and
 b) larger/better located text for search results.
 c) results showing in a row
 d) ~DONE!~  remove '}' from add new form button
3. ~DONE!~ Stop a class from being written if:
 a) ~DONE!~ Its name is less than 2 characters
 b) ~DONE!~ It has less than 2 fields
4. ~DONE!~  When making a class, Automatically put a name field.
5. ~DONE!~ Stop a field from being added if its name is a duplicate of another field
6. ~DONE!~ Make update fields work. Right now the 'no duplicates' check is stopping updates.
added another check to see if its a different id, if its not, the update works. :)

April 12th
1. ~DONE!~ Make some local JSON storage for IOApp
2. Fix ClassMaker delete button so it works

More stuff to do
1. Move Write file functions into their own file
2. Initialize from registry on app load
3. Make ui more friendly with messages
 a) class must be 'x' length (on unfocus)
 b) cant have two field with same name (on unfocus)
 c) fields must have 'x' length
 d) class must have 'x' fields


April 5th 2022, Cafe Canela, Puerto Vallarta, with Katia Dorantes

Things to be done, not in any real order


*** Fails when adding a second class.



~ DONE ~ -Install Android Emulator
-Write app to 'new app' location
-When generating a new class a must-have parameter is 'name'
-Composition Files
    a) To show the data for a record of a class *^
    b) A little tile to show just a couple pieces of data about a class,
    and when you click it it takes you to the full record
    c) The actual app which contains
        1. A drawer with the class names which when clicked go to
        2. *^ The records for that class with an add new button that will
        push the form overtop of the records
    d) alter the form generator to search for class records
        1. For searching and selecting one
        2. For searching and selecting multiple
        3. A button that lets them add a new record of the class right there


simple IO app v 0.1 is just classes in a drawer
1. forms to input data
2. list view of that data

features
1. data-types
    a) String b) numbers c) Class
    only a class can be a list

ui
1. basic text inputs for both strings and numbers
2. for classes, a search box with clickable results appearing below


Future stuff:
display types:
drawer, grid-list with preview of class
visual arrangement of classes based on their relationships/'hierarchical' structure